import { InputSymbol, StackSymbol, State } from "./pushdownAutomataTypes";
type itemType = State | InputSymbol | StackSymbol;
export declare class FormAutomataBuilder {
    private states;
    private inputSymbols;
    private stackSymbols;
    private initialState?;
    private initialStackSymbol?;
    private acceptingStates;
    private transitionFunctions;
    private statesDiv;
    private inputSymbolDiv;
    private stackSymbolDiv;
    private transitionFunctionDiv;
    private initialStateSelect;
    private initialStackSymbolSelect;
    private acceptingStatesSelect;
    private stateError;
    private inputSymbolError;
    private stackSymbolError;
    private initialStateError;
    private initialStackSymbolError;
    private acceptingStateError;
    private transitionFunctionError;
    private keyboardState;
    private keyboardInputSymbol;
    private keyboardStackSymbol;
    constructor();
    registerEvents(): void;
    reset(): void;
    stateFormSubmitHandler(event: SubmitEvent): void;
    inputSymbolSubmitHandler(event: SubmitEvent): void;
    stackSymbolSubmitHandler(event: SubmitEvent): void;
    initialStateChangeHandler(event: Event): void;
    initialStackSymbolChangeHandler(event: Event): void;
    acceptingStateEmptyChangeHandler(event: Event): void;
    acceptingStatesChangeHandler(event: Event): void;
    transitionFunctionAddHandler(event: Event): void;
    newItem<T extends itemType>(compareFunction: (arg1: T, arg2: T) => boolean, item: T, type: string): void;
    deleteState(item: State, div: HTMLDivElement, keyboardButton: HTMLButtonElement): void;
    deleteInputSymbol(item: InputSymbol, div: HTMLDivElement, keyboardButton: HTMLButtonElement): void;
    deleteStackSymbol(item: StackSymbol, div: HTMLDivElement, keyboardButton: HTMLButtonElement): void;
    stateAdded(item: State, keyboardButton: HTMLButtonElement): void;
    inputSymbolAdded(item: InputSymbol, keyboardButton: HTMLButtonElement): void;
    stackSymbolAdded(item: StackSymbol, keyboardButton: HTMLButtonElement): void;
    stateDeleted(item: State): void;
    inputSymbolDeleted(item: InputSymbol): void;
    stackSymbolDeleted(item: StackSymbol): void;
    createKeyboardButton(item: itemType): HTMLButtonElement;
    keyboardButtonPressed(event: Event): void;
}
export {};
